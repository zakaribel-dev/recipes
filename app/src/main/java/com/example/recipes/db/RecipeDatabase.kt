package com.example.recipes.db

import android.content.Context
import androidx.room.Database
import androidx.room.Room
import androidx.room.RoomDatabase
import androidx.room.TypeConverters
import com.example.recipes.models.Recipe

//  Annotation @Database : D√©finit la base de donn√©es Room
// - `entities = [Recipe::class]` ‚Üí Sp√©cifie les entit√©s stock√©es dans la base (ici, `Recipe`).
// - `version = 1` ‚Üí Version de la base de donn√©es (utile pour les migrations).
// - `exportSchema = false` ‚Üí Emp√™che Room de g√©n√©rer un fichier de sch√©ma JSON (√©vite de stocker l‚Äôhistorique des migrations).
@Database(entities = [Recipe::class], version = 1, exportSchema = false)
@TypeConverters(Converters::class) // üî• Permet d'utiliser des `TypeConverters` pour convertir des types complexes
abstract class RecipeDatabase : RoomDatabase() {

    //  D√©finition du DAO (Data Access Object)
    // - Fournit l'acc√®s aux op√©rations de base de donn√©es.
    abstract fun recipeDao(): RecipeDao

    companion object {
        // Singleton : S'assure qu'il n'existe **qu'une seule instance** de la base de donn√©es dans l'application.
        private var INSTANCE: RecipeDatabase? = null

        //  M√©thode pour obtenir l'instance unique de la base de donn√©es
        fun getDatabase(context: Context): RecipeDatabase {
            //  V√©rification : Si aucune instance n‚Äôexiste encore, on en cr√©e une.
            if (INSTANCE == null) {
                INSTANCE = Room.databaseBuilder(
                    context.applicationContext,  //  Utilisation du `applicationContext` pour √©viter les fuites m√©moire
                    RecipeDatabase::class.java, //  R√©f√©rence √† la classe de la base
                    "recipe_database" // Nom du fichier de la base de donn√©es stock√© sur l'appareil
                )
                    .fallbackToDestructiveMigration() // Si la structure de la base change, elle sera supprim√©e et recr√©√©e (‚ö† Perte de donn√©es)
                    .build()
            }
            //  Retourne l'instance unique de la base
            return INSTANCE as RecipeDatabase
        }
    }
}
